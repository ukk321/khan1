pipeline {
    agent any

    environment {
        // AWS EC2 Details
        EC2_USER = 'ubuntu' 
        EC2_IP = '98.82.178.99' 
        DEPLOY_DIR = '/var/www/html'  // Target directory on EC2
    }

    stages {
        stage('Fetch Specific File') {
            steps {
                script {
                    sh '''
                        echo "Fetching jaber.html from repository..."
                        rm -rf repo
                        git clone https://github.com/ukk321/khan1.git repo
                        cd repo
                        cp jaber.html ../
                        echo "File jaber.html copied successfully!"
                    '''
                }
            }
        }

        stage('Prepare Application') {
            steps {
                sh 'echo "Preparing application for deployment..."'
            }
        }

        stage('Quality Check') {
            steps {
                sh 'echo "Running quality checks and tests..."'
            }
        }

        stage('Deploy to EC2') {
            steps {
                sshagent(['ec2-ssh-key']) {
                    script {
                        try {
                            sh '''
                                echo "Copying jaber.html to EC2..."
                                scp -o StrictHostKeyChecking=no jaber.html ${EC2_USER}@${EC2_IP}:${DEPLOY_DIR}/
                                
                                echo "Deploying on EC2..."
                                ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_IP} '
                                    set -e
                                    
                                    echo "Setting proper permissions for jaber.html..."
                                    sudo chown ubuntu:www-data /var/www/html/jaber.html
                                    sudo chmod 644 /var/www/html/jaber.html
                                    
                                    echo "Restarting web server..."
                                    sudo systemctl restart apache2 || sudo systemctl restart nginx
                                    
                                    echo "Deployment completed successfully!"
                                '
                            '''
                        } catch (Exception e) {
                            echo "❌ Deployment failed: ${e}"
                            currentBuild.result = 'FAILURE'
                            throw e
                        }
                    }
                }
            }
        }

        stage('Verify Deployment') {
            steps {
                sh '''
                    echo "Verifying deployment..."
                    if curl -Is http://${EC2_IP}/jaber.html | grep -E "200|301|302"; then
                        echo "✅ Deployment successful!"
                    else
                        echo "❌ Deployment verification failed!" && exit 1
                    fi
                '''
            }
        }

        stage('Cleanup') {
            steps {
                sh 'rm -f jaber.html || true'
            }
        }
    }

    post {
        success {
            echo '✅ GitHub to EC2 deployment pipeline executed successfully!'
        }
        failure {
            echo '❌ GitHub to EC2 deployment pipeline failed!'
        }
    }
}
